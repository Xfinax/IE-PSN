####################################################
#	Run nightly tasks on newly created user accounts:
#	License the account on Office 365
#	Give Mimecast permission to index the mailbox
#	Send a welcome message


#####################################################
# Setup

Import-Module MSOnline

# import the provision.variables.ps1 file from the directory containing this script
$variablesPath = Join-path (split-path $myinvocation.mycommand.path)  provision.variables.ps1
. $variablesPath

########################################
# Connect to Exchange Online Powershell
$Credential = new-object Management.Automation.PSCredential $Office365User,$(ConvertTo-SecureString $Office365Password -AsPlainText -Force)
$Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri https://outlook.office365.com/powershell-liveid/ -Credential $Credential -Authentication Basic -AllowRedirection
Import-PSSession $Session

############################################
# Office 365 functions
Function Connect-Office365 {
	$Credential = new-object Management.Automation.PSCredential $Office365User,$(ConvertTo-SecureString $Office365Password -AsPlainText -Force)
	
	Connect-MsolService -credential $Credential
}

Function update-office365-license ($userPrincipalName) {
	Set-MsolUser -UserPrincipalName $UserPrincipalName -UsageLocation $Office365UsageLocation

	$LicenseOptions = New-MsolLicenseOptions -AccountSkuId $Office365AccountSkuId
	
	Set-MsolUserLicense -UserPrincipalName $UserPrincipalName -AddLicenses $Office365AccountSkuId -LicenseOptions $LicenseOptions
}

# License the account and set user permissions for Mimecast to read the mailbox, as well as turn off junk mail filtering
# See: http://kb.mimecast.com/Mimecast_Knowledge_Base/Getting_Started_with_Mimecast/Implementation/Mimecast_Synchronization_Engine/06_Preparing_for_Exchange_Services/Configuring_the_Mimecast_Synchronization_Engine_for_Office_365
function update-alloffice365licenses ($users) {
	connect-office365
	
	foreach ($user in $users) {

		update-office365-license -userPrincipalName ($user.userPrincipalName)

		add-mailboxpermission -identity ($user.userPrincipalName) -user $mimecastMSEServiceAccount -AccessRights fullaccess -InheritanceType all
			
	}
	
	write-host "Finished license activation attempt. If you see any license activation errors above, try manually activating the Office365 licenses later."
}

########################################
# Emailing functions
Function Send-Email ($to, $subject, $body) {
	send-mailmessage -subject $subject -bodyAsHTML $body -from $emailFrom  -to $to -smtpserver $emailServer
}

# Return an array of subject => HTML email body
# ROLE and DEPARTMENT are currently unused parameters, could be extended to allow dept or attorney/staff/student specific messages
Function Get-EmailBodies ($department, $role) {
	$emails = @()
	$dirContents = get-childitem (join-path (join-path $emailsPath "_Everyone") "*") -include *.html,*.htm,*.txt
	if ($dirContents -is [system.Array]) {
		foreach ($file in $dirContents) {
			$content = Get-Content -Path $file.fullName | Out-String
			$emails += @{Subject = $file.BaseName; Body = $content}
		}
	} elseif (-not ($dirContents -eq $null)) {
		$content = get-content -Path $dirContents | Out-String
		$emails += @{Subject = $dirContents.BaseName; Body = $content}
	} else {
		return $null
	}
	return $emails
}

Function send-userEmails ($to, $department, $role) {
	$emails = get-emailbodies -department $department -role $role
	if (-not ($emails -eq $null)) {
		foreach ($email in $emails) {
			send-email -subject $email.Subject -body $email.Body -to $to
			outputlog ("Sending email '" + $email.Subject + "' to " + $to)
		}
	}
}

# Run this function after allowing sufficient delay to ensure email account was enabled
# assumes that the user list was generated by get-msoluser
Function send-emailtoAllUsers ($users) {
	foreach ($user in $userSummary) {
		send-userEmails -to $user.userPrincipalName -department $user.department -role $user.title
	}
}


############################################################
# Processing
connect-office365
[array]$users = get-msoluser -unlicensedusersonly -enabledfilter enabledonly -domain gbls.org

update-alloffice365licenses -users $users
send-emailtoAllUsers -users $users

# turn off the junk email filter 1x/day for anybody who has logged on to Outlook Web App
get-mailbox | Set-MailboxJunkEmailConfiguration -enabled $false

# turn off clutter
get-mailbox | set-clutter -Enable $false

###############################
# Cleanup
Remove-PSSession $Session